{"version":3,"sources":["components/ProductItem.tsx","components/ProductList.tsx","components/NewProduct.tsx","components/ChangeProduct.tsx","App.tsx","index.tsx"],"names":["ProductItem","product","onDelete","onChange","commentsLength","comments","length","className","type","onClick","id","name","src","imageUrl","alt","count","size","height","width","weight","ProductList","products","map","NewProduct","state","newProduct","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","onAdd","resetInputs","this","onSubmit","htmlFor","required","onCancel","React","Component","ChangeProduct","changedProduct","changeProduct","App","showModal","addProduct","deleteProduct","filter","clickOnAdd","clickOnChange","saveChange","productsFromServer","hidden","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"omCAWaA,EAA+B,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC1DC,EAAiBH,EAAQI,SAASC,OAExC,OACE,qBAAIC,UAAU,UAAd,UACE,gCACE,wBACEC,KAAK,SACLC,QAAS,kBAAMP,EAASD,EAAQS,KAFlC,oBAMA,wBACEF,KAAK,SACLC,QAAS,kBAAMN,EAAS,eAAKF,KAF/B,uBAOF,oBAAIM,UAAU,iBAAd,SAAgCN,EAAQU,OACxC,qBAAKJ,UAAU,eAAeK,IAAKX,EAAQY,SAAUC,IAAKb,EAAQU,OAClE,mBAAGJ,UAAU,iBAAb,0BAAyCN,EAAQc,SACjD,+CAAgBd,EAAQe,KAAKC,OAA7B,cAAyChB,EAAQe,KAAKE,SACtD,iDAAkBjB,EAAQkB,UAC1B,sBAAKZ,UAAU,0BAAf,sBAEE,qBAAKA,UAAU,oBAAf,SAEuB,IAAnBH,EAAA,UACOA,EADP,aAEI,oCC9BHgB,G,MAA8B,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,SAAUnB,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAChE,OACE,mCACE,oBAAII,UAAU,cAAd,SACGc,EAASC,KAAI,SAAArB,GAAO,OACnB,cAAC,EAAD,CACEA,QAASA,EACTC,SAAUA,EACVC,SAAUA,GACLF,EAAQS,a,eCPZa,G,MAAb,4MACEC,MAAe,CACbC,WAAY,CACVf,GAAI,EACJG,SAAU,GACVF,KAAM,GACNI,MAAO,EACPC,KAAM,CACJE,MAAO,EACPD,OAAQ,GAEVE,OAAQ,EACRd,SAAU,KAZhB,EAgBEqB,aAAe,SACbC,GAEA,MAAwBA,EAAMC,OAAtBjB,EAAR,EAAQA,KAAMkB,EAAd,EAAcA,MAEd,EAAKC,UAAS,SAAAN,GAAK,MAAK,CACtBC,WAAW,2BACND,EAAMC,YADD,kBAEPd,EAAOkB,SAxBhB,EA6BEE,aAAe,SAACJ,GACdA,EAAMK,iBAEN,EAAKC,MAAMC,MAAM,EAAKV,MAAMC,YAE5B,EAAKU,eAlCT,EAqCEA,YAAc,WACZ,EAAKL,SAAS,CACZL,WAAY,CACVf,GAAI,EACJG,SAAU,GACVF,KAAM,GACNI,MAAO,EACPC,KAAM,CACJE,MAAO,EACPD,OAAQ,GAEVE,OAAQ,EACRd,SAAU,OAjDlB,4CAsDE,WACE,MAEI+B,KAAKZ,MAAMC,WADbd,EADF,EACEA,KAAME,EADR,EACQA,SAAUH,EADlB,EACkBA,GAAIK,EADtB,EACsBA,MAAOI,EAD7B,EAC6BA,OAAQd,EADrC,EACqCA,SAErC,EAA0B+B,KAAKZ,MAAMC,WAAWT,KAAxCE,EAAR,EAAQA,MAAOD,EAAf,EAAeA,OAEf,OACE,sBAAKV,UAAU,aAAf,4BAEE,uBAAMA,UAAU,mBAAmB8B,SAAUD,KAAKL,aAAlD,UACE,wBAAOO,QAAQ,aAAa/B,UAAU,oBAAtC,sCAEE,uBACEA,UAAU,oBACVC,KAAK,OACLE,GAAG,aACHC,KAAK,OACLkB,MAAOlB,EACPR,SAAUiC,KAAKV,aACfa,UAAQ,OAIZ,wBAAOD,QAAQ,eAAe/B,UAAU,oBAAxC,4CAEE,uBACEA,UAAU,oBACVC,KAAK,OACLE,GAAG,eACHC,KAAK,WACLkB,MAAOhB,EACPV,SAAUiC,KAAKV,aACfa,UAAQ,OAIZ,wBAAOD,QAAQ,WAAW/B,UAAU,oBAApC,oCAEE,uBACEA,UAAU,oBACVC,KAAK,SACLE,GAAG,WACHC,KAAK,KACLkB,MAAOnB,EACPP,SAAUiC,KAAKV,aACfa,UAAQ,OAIZ,wBAAOD,QAAQ,cAAc/B,UAAU,oBAAvC,uCAEE,uBACEA,UAAU,oBACVC,KAAK,SACLE,GAAG,cACHC,KAAK,QACLkB,MAAOd,EACPZ,SAAUiC,KAAKV,aACfa,UAAQ,OAIZ,wBAAOD,QAAQ,eAAe/B,UAAU,oBAAxC,8CAEE,uBACEA,UAAU,oBACVC,KAAK,SACLE,GAAG,eACHC,KAAK,SACLkB,MAAOV,EACPhB,SAAUiC,KAAKV,aACfa,UAAQ,OAIZ,0DAEE,wBAAOD,QAAQ,cAAc/B,UAAU,oBAAvC,mBAEE,uBACEA,UAAU,oBACVC,KAAK,SACLE,GAAG,cACHC,KAAK,QACLkB,MAAOX,EACPf,SAAUiC,KAAKV,aACfa,UAAQ,OAIZ,wBAAOD,QAAQ,eAAe/B,UAAU,oBAAxC,oBAEE,uBACEA,UAAU,oBACVC,KAAK,SACLE,GAAG,eACHC,KAAK,SACLkB,MAAOZ,EACPd,SAAUiC,KAAKV,aACfa,UAAQ,UAKd,wBAAOD,QAAQ,gBAAgB/B,UAAU,oBAAzC,yCAEE,0BACEA,UAAU,oBACVG,GAAG,gBACHC,KAAK,WACLR,SAAUiC,KAAKV,aACfa,UAAQ,OAIZ,wBAAQ/B,KAAK,SAAb,6BACA,wBAAQA,KAAK,SAASC,QAAS2B,KAAKH,MAAMO,SAA1C,oBACCnC,YA3KX,GAAgCoC,IAAMC,YCCzBC,EAAb,4MACEnB,MAAe,CACboB,eAAgB,CACdlC,GAAI,EAAKuB,MAAMhC,QAAQS,GACvBG,SAAU,EAAKoB,MAAMhC,QAAQY,SAC7BF,KAAM,EAAKsB,MAAMhC,QAAQU,KACzBI,MAAO,EAAKkB,MAAMhC,QAAQc,MAC1BC,KAAM,CACJE,MAAO,EAAKe,MAAMhC,QAAQe,KAAKE,MAC/BD,OAAQ,EAAKgB,MAAMhC,QAAQe,KAAKC,QAElCE,OAAQ,EAAKc,MAAMhC,QAAQkB,OAC3Bd,SAAU,EAAK4B,MAAMhC,QAAQI,WAZnC,EAgBEqB,aAAe,SACbC,GAEA,MAAwBA,EAAMC,OAAtBjB,EAAR,EAAQA,KAAMkB,EAAd,EAAcA,MAEd,EAAKC,UAAS,SAAAN,GAAK,MAAK,CACtBoB,eAAe,2BACVpB,EAAMoB,gBADG,kBAEXjC,EAAOkB,SAxBhB,EA6BEE,aAAe,SAACJ,GACdA,EAAMK,iBAEN,EAAKC,MAAMY,cAAc,EAAKrB,MAAMoB,iBAhCxC,4CAmCE,WACE,MAEIR,KAAKZ,MAAMoB,eADbjC,EADF,EACEA,KAAME,EADR,EACQA,SAAUH,EADlB,EACkBA,GAAIK,EADtB,EACsBA,MAAOI,EAD7B,EAC6BA,OAAQd,EADrC,EACqCA,SAErC,EAA0B+B,KAAKZ,MAAMoB,eAAe5B,KAA5CE,EAAR,EAAQA,MAAOD,EAAf,EAAeA,OAEf,OACE,sBAAKV,UAAU,aAAf,oCAEE,uBAAMA,UAAU,mBAAmB8B,SAAUD,KAAKL,aAAlD,UACE,wBAAOO,QAAQ,aAAa/B,UAAU,oBAAtC,sCAEE,uBACEA,UAAU,oBACVC,KAAK,OACLE,GAAG,aACHC,KAAK,OACLkB,MAAOlB,EACPR,SAAUiC,KAAKV,aACfa,UAAQ,OAIZ,wBAAOD,QAAQ,eAAe/B,UAAU,oBAAxC,4CAEE,uBACEA,UAAU,oBACVC,KAAK,OACLE,GAAG,eACHC,KAAK,WACLkB,MAAOhB,EACPV,SAAUiC,KAAKV,aACfa,UAAQ,OAIZ,wBAAOD,QAAQ,WAAW/B,UAAU,oBAApC,oCAEE,uBACEA,UAAU,oBACVC,KAAK,SACLE,GAAG,WACHC,KAAK,KACLkB,MAAOnB,EACPP,SAAUiC,KAAKV,aACfa,UAAQ,OAIZ,wBAAOD,QAAQ,cAAc/B,UAAU,oBAAvC,uCAEE,uBACEA,UAAU,oBACVC,KAAK,SACLE,GAAG,cACHC,KAAK,QACLkB,MAAOd,EACPZ,SAAUiC,KAAKV,aACfa,UAAQ,OAIZ,wBAAOD,QAAQ,eAAe/B,UAAU,oBAAxC,8CAEE,uBACEA,UAAU,oBACVC,KAAK,SACLE,GAAG,eACHC,KAAK,SACLkB,MAAOV,EACPhB,SAAUiC,KAAKV,aACfa,UAAQ,OAIZ,0DAEE,wBAAOD,QAAQ,cAAc/B,UAAU,oBAAvC,mBAEE,uBACEA,UAAU,oBACVC,KAAK,SACLE,GAAG,cACHC,KAAK,QACLkB,MAAOX,EACPf,SAAUiC,KAAKV,aACfa,UAAQ,OAIZ,wBAAOD,QAAQ,eAAe/B,UAAU,oBAAxC,oBAEE,uBACEA,UAAU,oBACVC,KAAK,SACLE,GAAG,eACHC,KAAK,SACLkB,MAAOZ,EACPd,SAAUiC,KAAKV,aACfa,UAAQ,UAKd,wBAAOD,QAAQ,gBAAgB/B,UAAU,oBAAzC,yCAEE,0BACEA,UAAU,oBACVG,GAAG,gBACHC,KAAK,WACLR,SAAUiC,KAAKV,aACfa,UAAQ,OAIZ,wBAAQ/B,KAAK,SAAb,iCACA,wBAAQA,KAAK,SAASC,QAAS2B,KAAKH,MAAMO,SAA1C,oBACCnC,YAxJX,GAAmCoC,IAAMC,WCE5BI,EAAb,4MACEtB,MAAe,CACbH,SAAU,GACV0B,WAAW,EACXC,YAAY,EACZH,eAAe,EACfD,eAAgB,MANpB,EAaEI,WAAa,SAACvB,GACZ,EAAKK,UAAS,SAAAN,GAAK,MAAK,CACtBH,SAAS,GAAD,mBAAMG,EAAMH,UAAZ,CACNI,SAhBR,EAoBEwB,cAAgB,SAACvC,GACf,EAAKoB,UAAS,SAAAN,GAAK,MAAK,CACtBH,SAAUG,EAAMH,SAAS6B,QAAO,SAAAjD,GAAO,OAAIA,EAAQS,KAAOA,UAtBhE,EA0BEyC,WAAa,WACX,EAAKrB,UAAS,SAAAN,GAAK,MAAK,CACtBuB,WAAYvB,EAAMuB,UAClBC,YAAaxB,EAAMwB,gBA7BzB,EAiCEI,cAAgB,SAACnD,GACf,EAAK6B,UAAS,SAAAN,GAAK,MAAK,CACtBuB,WAAYvB,EAAMuB,UAClBF,eAAgBrB,EAAMqB,cACtBD,eAAgB3C,OArCtB,EAyCEoD,WAAa,SAACT,GACZ,EAAKd,UAAS,SAAAN,GACZ,MAAQ,CACNH,SAAS,GAAD,mBACHG,EAAMH,UADH,CAENuB,SA9CV,uDASE,WACER,KAAKN,SAAS,CAAET,SAAUiC,MAV9B,oBAoDE,WACE,MAEIlB,KAAKZ,MADPH,EADF,EACEA,SAAU0B,EADZ,EACYA,UAAWC,EADvB,EACuBA,WAAYH,EADnC,EACmCA,cAAeD,EADlD,EACkDA,eAGlD,OACE,sBAAKrC,UAAU,MAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,wBACEA,UAAU,mBACVC,KAAK,SACLC,QAAS2B,KAAKe,WACdI,OAAQR,EAJV,2BASF,cAAC,EAAD,CACE1B,SAAUA,EACVnB,SAAUkC,KAAKa,cACf9C,SAAUiC,KAAKgB,mBAIlBL,GAAaC,GACZ,qBAAKzC,UAAU,eAAf,SACE,cAAC,EAAD,CAAY2B,MAAOE,KAAKY,WAAYR,SAAUJ,KAAKe,eAGtDJ,GAAaF,GACZ,qBAAKtC,UAAU,eAAf,SACGqC,GACC,cAAC,EAAD,CACEJ,SAAUJ,KAAKe,WACflD,QAAS2C,EACTC,cAAeT,KAAKiB,sBAxFpC,GAAyBZ,IAAMC,WCX/Bc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0a7850e5.chunk.js","sourcesContent":["import React from 'react';\nimport { Product } from '../types';\n\nimport './ProductItem.scss';\n\ntype Props = {\n  product: Product;\n  onDelete(id:number):void;\n  onChange(product:Product):void;\n};\n\nexport const ProductItem: React.FC<Props> = ({ product, onDelete, onChange }) => {\n  const commentsLength = product.comments.length;\n\n  return (\n    <li className=\"Product\">\n      <div>\n        <button\n          type=\"button\"\n          onClick={() => onDelete(product.id)}\n        >\n          Delete\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => onChange({ ...product })}\n        >\n          Change\n        </button>\n      </div>\n      <h3 className=\"Product__title\">{product.name}</h3>\n      <img className=\"Product__img\" src={product.imageUrl} alt={product.name} />\n      <p className=\"Product__count\">{`Count: ${product.count}`}</p>\n      <span>{`Size: ${product.size.height} x ${product.size.width}`}</span>\n      <span>{`Weight: ${product.weight}`}</span>\n      <div className=\"Product__comments-title\">\n        Comments:\n        <div className=\"Product__comments\">\n          {\n            commentsLength !== 0\n              ? `${commentsLength} comments`\n              : 'There is no comments yet'\n          }\n        </div>\n      </div>\n    </li>\n  );\n};\n","import React from 'react';\nimport { Product } from '../types';\nimport { ProductItem } from './ProductItem';\nimport './ProductList.scss';\n\ntype Prop = {\n  products: Product[];\n  onDelete(id:number):void;\n  onChange(product: Product):void;\n};\n\nexport const ProductList: React.FC<Prop> = ({ products, onDelete, onChange }) => {\n  return (\n    <>\n      <ul className=\"ProductList\">\n        {products.map(product => (\n          <ProductItem\n            product={product}\n            onDelete={onDelete}\n            onChange={onChange}\n            key={product.id}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React from 'react';\nimport { Product } from '../types';\nimport './NewProduct.scss';\n\ntype State = {\n  newProduct: Product;\n};\n\ntype Props = {\n  onAdd(newProduct: Product):void;\n  onCancel():void;\n};\n\nexport class NewProduct extends React.Component<Props, State> {\n  state: State = {\n    newProduct: {\n      id: 0,\n      imageUrl: '',\n      name: '',\n      count: 0,\n      size: {\n        width: 0,\n        height: 0,\n      },\n      weight: 0,\n      comments: [],\n    },\n  };\n\n  handleChange = (\n    event:React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    const { name, value } = event.target;\n\n    this.setState(state => ({\n      newProduct: {\n        ...state.newProduct,\n        [name]: value,\n      },\n    }));\n  };\n\n  handleSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    this.props.onAdd(this.state.newProduct);\n\n    this.resetInputs();\n  };\n\n  resetInputs = () => {\n    this.setState({\n      newProduct: {\n        id: 0,\n        imageUrl: '',\n        name: '',\n        count: 0,\n        size: {\n          width: 0,\n          height: 0,\n        },\n        weight: 0,\n        comments: [],\n      },\n    });\n  };\n\n  render(): React.ReactNode {\n    const {\n      name, imageUrl, id, count, weight, comments,\n    } = this.state.newProduct;\n    const { width, height } = this.state.newProduct.size;\n\n    return (\n      <div className=\"NewProduct\">\n        Add new product\n        <form className=\"NewProduct__form\" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"name-input\" className=\"NewProduct__label\">\n            Type name of the product:\n            <input\n              className=\"NewProduct__input\"\n              type=\"text\"\n              id=\"name-input\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n\n          <label htmlFor=\"imgUrl-input\" className=\"NewProduct__label\">\n            Type link to the product image:\n            <input\n              className=\"NewProduct__input\"\n              type=\"text\"\n              id=\"imgUrl-input\"\n              name=\"imageUrl\"\n              value={imageUrl}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n\n          <label htmlFor=\"id-input\" className=\"NewProduct__label\">\n            Type id of the product:\n            <input\n              className=\"NewProduct__input\"\n              type=\"number\"\n              id=\"id-input\"\n              name=\"id\"\n              value={id}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n\n          <label htmlFor=\"count-input\" className=\"NewProduct__label\">\n            Type count of the product:\n            <input\n              className=\"NewProduct__input\"\n              type=\"number\"\n              id=\"count-input\"\n              name=\"count\"\n              value={count}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n\n          <label htmlFor=\"weight-input\" className=\"NewProduct__label\">\n            Type weight of the product in gr:\n            <input\n              className=\"NewProduct__input\"\n              type=\"number\"\n              id=\"weight-input\"\n              name=\"weight\"\n              value={weight}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n\n          <p>\n            Type size of the product:\n            <label htmlFor=\"width-input\" className=\"NewProduct__label\">\n              Width:\n              <input\n                className=\"NewProduct__input\"\n                type=\"number\"\n                id=\"width-input\"\n                name=\"width\"\n                value={width}\n                onChange={this.handleChange}\n                required\n              />\n            </label>\n\n            <label htmlFor=\"height-input\" className=\"NewProduct__label\">\n              Height:\n              <input\n                className=\"NewProduct__input\"\n                type=\"number\"\n                id=\"height-input\"\n                name=\"height\"\n                value={height}\n                onChange={this.handleChange}\n                required\n              />\n            </label>\n          </p>\n\n          <label htmlFor=\"comment-input\" className=\"NewProduct__label\">\n            Add comment for the product:\n            <textarea\n              className=\"NewProduct__input\"\n              id=\"comment-input\"\n              name=\"comments\"\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n\n          <button type=\"submit\">Add new product</button>\n          <button type=\"button\" onClick={this.props.onCancel}>Cancel</button>\n          {comments}\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Product } from '../types';\nimport './NewProduct.scss';\n\ntype Props = {\n  product: Product;\n  onCancel():void;\n  changeProduct(product:Product):void;\n};\n\ntype State = {\n  changedProduct: Product;\n};\n\nexport class ChangeProduct extends React.Component<Props, State> {\n  state: State = {\n    changedProduct: {\n      id: this.props.product.id,\n      imageUrl: this.props.product.imageUrl,\n      name: this.props.product.name,\n      count: this.props.product.count,\n      size: {\n        width: this.props.product.size.width,\n        height: this.props.product.size.height,\n      },\n      weight: this.props.product.weight,\n      comments: this.props.product.comments,\n    },\n  };\n\n  handleChange = (\n    event:React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    const { name, value } = event.target;\n\n    this.setState(state => ({\n      changedProduct: {\n        ...state.changedProduct,\n        [name]: value,\n      },\n    }));\n  };\n\n  handleSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    this.props.changeProduct(this.state.changedProduct);\n  };\n\n  render(): React.ReactNode {\n    const {\n      name, imageUrl, id, count, weight, comments,\n    } = this.state.changedProduct;\n    const { width, height } = this.state.changedProduct.size;\n\n    return (\n      <div className=\"NewProduct\">\n        Change selected product\n        <form className=\"NewProduct__form\" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"name-input\" className=\"NewProduct__label\">\n            Type name of the product:\n            <input\n              className=\"NewProduct__input\"\n              type=\"text\"\n              id=\"name-input\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n\n          <label htmlFor=\"imgUrl-input\" className=\"NewProduct__label\">\n            Type link to the product image:\n            <input\n              className=\"NewProduct__input\"\n              type=\"text\"\n              id=\"imgUrl-input\"\n              name=\"imageUrl\"\n              value={imageUrl}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n\n          <label htmlFor=\"id-input\" className=\"NewProduct__label\">\n            Type id of the product:\n            <input\n              className=\"NewProduct__input\"\n              type=\"number\"\n              id=\"id-input\"\n              name=\"id\"\n              value={id}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n\n          <label htmlFor=\"count-input\" className=\"NewProduct__label\">\n            Type count of the product:\n            <input\n              className=\"NewProduct__input\"\n              type=\"number\"\n              id=\"count-input\"\n              name=\"count\"\n              value={count}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n\n          <label htmlFor=\"weight-input\" className=\"NewProduct__label\">\n            Type weight of the product in gr:\n            <input\n              className=\"NewProduct__input\"\n              type=\"number\"\n              id=\"weight-input\"\n              name=\"weight\"\n              value={weight}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n\n          <p>\n            Type size of the product:\n            <label htmlFor=\"width-input\" className=\"NewProduct__label\">\n              Width:\n              <input\n                className=\"NewProduct__input\"\n                type=\"number\"\n                id=\"width-input\"\n                name=\"width\"\n                value={width}\n                onChange={this.handleChange}\n                required\n              />\n            </label>\n\n            <label htmlFor=\"height-input\" className=\"NewProduct__label\">\n              Height:\n              <input\n                className=\"NewProduct__input\"\n                type=\"number\"\n                id=\"height-input\"\n                name=\"height\"\n                value={height}\n                onChange={this.handleChange}\n                required\n              />\n            </label>\n          </p>\n\n          <label htmlFor=\"comment-input\" className=\"NewProduct__label\">\n            Add comment for the product:\n            <textarea\n              className=\"NewProduct__input\"\n              id=\"comment-input\"\n              name=\"comments\"\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n\n          <button type=\"submit\">Change this product</button>\n          <button type=\"button\" onClick={this.props.onCancel}>Cancel</button>\n          {comments}\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { ProductList } from './components/ProductList';\nimport { Product } from './types';\nimport productsFromServer from './api/products.json';\nimport { NewProduct } from './components/NewProduct';\nimport { ChangeProduct } from './components/ChangeProduct';\n\ntype State = {\n  products: Product[];\n  showModal: boolean;\n  addProduct: boolean;\n  changeProduct: boolean;\n  changedProduct: Product | null;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    products: [],\n    showModal: false,\n    addProduct: false,\n    changeProduct: false,\n    changedProduct: null,\n  };\n\n  componentDidMount() {\n    this.setState({ products: productsFromServer });\n  }\n\n  addProduct = (newProduct: Product) => {\n    this.setState(state => ({\n      products: [...state.products,\n        newProduct],\n    }));\n  };\n\n  deleteProduct = (id:number) => {\n    this.setState(state => ({\n      products: state.products.filter(product => product.id !== id),\n    }));\n  };\n\n  clickOnAdd = () => {\n    this.setState(state => ({\n      showModal: !state.showModal,\n      addProduct: !state.addProduct,\n    }));\n  };\n\n  clickOnChange = (product: Product) => {\n    this.setState(state => ({\n      showModal: !state.showModal,\n      changeProduct: !state.changeProduct,\n      changedProduct: product,\n    }));\n  };\n\n  saveChange = (changedProduct: Product) => {\n    this.setState(state => {\n      return ({\n        products: [\n          ...state.products,\n          changedProduct,\n        ],\n      });\n    });\n  };\n\n  render(): React.ReactNode {\n    const {\n      products, showModal, addProduct, changeProduct, changedProduct,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <div className=\"App__sidebar-panel\">\n            <button\n              className=\"App__sidebar-btn\"\n              type=\"button\"\n              onClick={this.clickOnAdd}\n              hidden={showModal}\n            >\n              Add product\n            </button>\n          </div>\n          <ProductList\n            products={products}\n            onDelete={this.deleteProduct}\n            onChange={this.clickOnChange}\n          />\n        </div>\n\n        {showModal && addProduct && (\n          <div className=\"App__content\">\n            <NewProduct onAdd={this.addProduct} onCancel={this.clickOnAdd} />\n          </div>\n        )}\n        {showModal && changeProduct && (\n          <div className=\"App__content\">\n            {changedProduct && (\n              <ChangeProduct\n                onCancel={this.clickOnAdd}\n                product={changedProduct}\n                changeProduct={this.saveChange}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}